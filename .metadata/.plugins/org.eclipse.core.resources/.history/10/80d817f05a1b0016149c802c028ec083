package servlets;

import java.io.IOException;
import java.util.HashMap;
import java.util.Map;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import beans.T_member_p;
import dao.T_member_pDao;
import dao.DAOFactory;
import forms.CreationT_member_pForm;

public class CreationT_member_p extends HttpServlet {
    public static final String CONF_DAO_FACTORY     = "daofactory";
    public static final String CHEMIN               = "chemin";
    public static final String ATT_T_MEMBER_P       = "T_member_p";
    public static final String ATT_FORM             = "form";
    public static final String SESSION_T_MEMBERS_P  = "T_members_p";

    public static final String VUE_SUCCES           = "/WEB-INF/afficherT_member_p.jsp";
    public static final String VUE_FORM             = "/WEB-INF/creerT_member_p.jsp";

    private T_member_pDao t_member_pDao;

    public void init() throws ServletException {
        /* Récupération d'une instance de notre DAO Utilisateur */
        this.t_member_pDao = ( (DAOFactory) getServletContext().getAttribute( CONF_DAO_FACTORY ) ).getT_member_pDao();
    }

    public void doGet( HttpServletRequest request, HttpServletResponse response ) throws ServletException, IOException {
        /* À la réception d'une requête GET, simple affichage du formulaire */
        this.getServletContext().getRequestDispatcher( VUE_FORM ).forward( request, response );
    }

    public void doPost( HttpServletRequest request, HttpServletResponse response ) throws ServletException, IOException {
        /*
         * Lecture du paramètre 'chemin' passé à la servlet via la déclaration
         * dans le web.xml
         */
        String chemin = this.getServletConfig().getInitParameter( CHEMIN );

        /* Préparation de l'objet formulaire */
        CreationT_member_pForm form = new CreationT_member_pForm(t_member_pDao);

        /* Traitement de la requête et récupération du bean en résultant */
        T_member_p t_member_p = form.creerT_member_p(request, chemin);

        /* Ajout du bean et de l'objet métier à l'objet requête */
        request.setAttribute(ATT_T_MEMBER_P, t_member_p);
        request.setAttribute(ATT_FORM, form);

        /* Si aucune erreur */
        if ( form.getErreurs().isEmpty() ) {
            /* Alors récupération de la map des clients dans la session */
            HttpSession session = request.getSession();
            Map<String, T_member_p> t_members_p = (HashMap<String, T_member_p>) session.getAttribute(SESSION_T_MEMBERS_P);
            /* Si aucune map n'existe, alors initialisation d'une nouvelle map */
            if ( t_members_p == null ) {
            	t_members_p = new HashMap<String, T_member_p>();
            }
            /* Puis ajout du client courant dans la map */
            t_members_p.put(t_member_p.getMP_Login(), t_member_p);
            /* Et enfin (ré)enregistrement de la map en session */
            session.setAttribute(SESSION_T_MEMBERS_P, t_members_p);

            /* Affichage de la fiche récapitulative */
            this.getServletContext().getRequestDispatcher( VUE_SUCCES ).forward( request, response );
        } else {
            /* Sinon, ré-affichage du formulaire de création avec les erreurs */
            this.getServletContext().getRequestDispatcher( VUE_FORM ).forward( request, response );
        }
    }
}